name: engine_package_build

on:
  push:
    branches: [ main, ci ]
  pull_request:
    branches: [ main, ci ]
  repository_dispatch:
  workflow_dispatch:
  
jobs:
  pi4-debug:
    name: 'Build and deploy flutter engine for Raspberry Pi 4 (32-bit, debug mode).'
    runs-on: ubuntu-latest
       
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
      
      - uses: actions/checkout@v1
      
      - name: Read stable engine version
        id: engine-version-stable
        run: echo ::set-output name=hash::$(cat engine.version.stable)
        
      - name: Test output
        run: echo ${{ steps.engine-version-stable.outputs.hash }}
      
      - name: build engine
        uses: ./.github/actions/build-engine
        with:
          ref: "${{ steps.engine-version-stable.outputs.hash  }}"
          is-host: false
          runtime-mode: debug
          os: linux
          cpu: arm
          additional-gn-args: '--embedder-for-target --disable-desktop-embeddings --no-build-glfw-shell --no-build-embedder-examples --no-goma'
          additional-raw-gn-args: 'arm_tune = "cortex-a72+crc+crypto"'
      
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.engine-version-stable.outputs.hash }}-pi4-debug
          path: |
            ${{ github.workspace }}/engine/src/out/linux_debug_arm/libflutter_engine.so
            ${{ github.workspace }}/engine/src/out/linux_debug_arm/icudtl.dat
            ${{ github.workspace }}/engine/src/out/linux_debug_arm/flutter_embedder.h
    
  pi4-profile:
    name: 'Build and deploy flutter engine for Raspberry Pi 4 (32-bit, profile mode).'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      
      - name: Read stable engine version
        id: engine-version-stable
        run: echo ::set-output name=hash::$(cat engine.version.stable)
        
      - name: build engine
        uses: ./.github/actions/build-engine
        with:
          ref: "${{ steps.engine-version-stable.outputs.hash  }}"
          is-host: false
          runtime-mode: profile
          os: linux
          cpu: arm
          additional-gn-args: '--embedder-for-target --disable-desktop-embeddings --no-build-glfw-shell --no-build-embedder-examples --no-goma'
          additional-raw-gn-args: 'arm_tune = "cortex-a72+crc+crypto"'
          
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.engine-version-stable.outputs.hash }}-pi4-profile
          path: |
            ${{ github.workspace }}/engine/src/out/linux_profile_arm/libflutter_engine.so
            ${{ github.workspace }}/engine/src/out/linux_profile_arm/icudtl.dat
            ${{ github.workspace }}/engine/src/out/linux_profile_arm/flutter_embedder.h
            ${{ github.workspace }}/engine/src/out/linux_profile_arm/clang_x64/gen_snapshot
  
  pi4-release:
    name: 'Build and deploy flutter engine for Raspberry Pi 4 (32-bit, release mode).'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v1
      
      - name: Read stable engine version
        id: engine-version-stable
        run: echo ::set-output name=hash::$(cat engine.version.stable)
        
      - name: build engine (armv7 hard-float release)
        uses: ./.github/actions/build-engine
        with:
          ref: "${{ steps.engine-version-stable.outputs.hash  }}"
          is-host: false
          runtime-mode: release
          os: linux
          cpu: arm
          additional-gn-args: '--embedder-for-target --disable-desktop-embeddings --no-build-glfw-shell --no-build-embedder-examples --no-goma'
          additional-raw-gn-args: 'arm_tune = "cortex-a72+crc+crypto"'
          
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.engine-version-stable.outputs.hash }}-pi4-release
          path: |
            ${{ github.workspace }}/engine/src/out/linux_release_arm/libflutter_engine.so
            ${{ github.workspace }}/engine/src/out/linux_release_arm/icudtl.dat
            ${{ github.workspace }}/engine/src/out/linux_release_arm/flutter_embedder.h
            ${{ github.workspace }}/engine/src/out/linux_release_arm/clang_x64/gen_snapshot
